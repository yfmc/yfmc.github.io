<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="FaqMapper">

	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시 -->
	<resultMap id="faqMap" type="study.spring.cinephile.model.Faq">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결 -->
		<result property="faq_id" 			column="faq_id" />
		<result property="faq_title" 		column="faq_title" />
		<result property="faq_content" 	column="faq_content" />
		<result property="reg_date" 		column="reg_date" />
		<result property="edit_date" 		column="edit_date" />
	</resultMap>
	
	<!-- 단일행 조회(datetime 타입)를 위한 기능 정의 -->
	<select id="selectItem" parameterType="study.spring.cinephile.model.Faq"
		resultMap="faqMap">
		select faq_id, faq_title, faq_content, reg_date, edit_date from faq where faq_id=#{faq_id};
	</select>
	
	<!-- 단일행 조회(date 타입)를 위한 기능 정의 -->
	<select id="selectItem_date" parameterType="study.spring.cinephile.model.Faq"
		resultMap="faqMap">
		select faq_id, faq_title, faq_content, cast(reg_date as date) as reg_date, edit_date from faq where faq_id=#{faq_id};
	</select>
	
	<!-- 다음글 조회를 위한 기능정의  -->
	<select id="selectItem_next" parameterType="study.spring.cinephile.model.Faq"
		resultMap="faqMap">
		<![CDATA[select faq_id, faq_title, faq_content, cast(reg_date as date) as reg_date, edit_date
		from faq where faq_id = (select faq_id from faq where faq_id > #{faq_id} order by faq_id  limit 0,1)]]>
	</select>
	
	<!-- 이전글 조회를 위한 기능정의  -->
	<select id="selectItem_prev" parameterType="study.spring.cinephile.model.Faq"
		resultMap="faqMap">
		<![CDATA[select faq_id, faq_title, faq_content, cast(reg_date as date) as reg_date, edit_date
		from faq where faq_id = (select faq_id from faq where faq_id < #{faq_id} order by faq_id desc limit 0,1)]]>
	</select>
	
	<!-- 다중행 조회(datetime)를 위한 기능 정의 -->
	<select id="selectList"
		parameterType="study.spring.cinephile.model.Faq"
		resultMap="faqMap">
		select faq_id, faq_title, faq_content, reg_date, edit_date from faq
	
		<where>
			<if test ="searchType=='faq_title' and keyword != null and keyword != ''">
				faq_title like concat('%', #{keyword}, '%')
			</if>
			<if test ="searchType=='faq_content' and keyword != null and keyword != ''">
				or faq_content like concat('%', #{keyword}, '%')
			</if>
		</where>
		
		order by faq_id desc
		
		<if test="listCount > 0">
			limit #{offset}, #{listCount}
		</if>
	</select>
	
	<!-- 다중행 조회(date)를 위한 기능 정의 -->
	<select id="selectList_date"
		parameterType="study.spring.cinephile.model.Faq"
		resultMap="faqMap">
		select faq_id, faq_title, faq_content, cast(reg_date as date) as reg_date, edit_date from faq
	
		<where>
			<if test ="searchType=='faq_title' and keyword != null and keyword != ''">
				faq_title like concat('%', #{keyword}, '%')
			</if>
			<if test ="searchType=='faq_content' and keyword != null and keyword != ''">
				or faq_content like concat('%', #{keyword}, '%')
			</if>
		</where>
		
		order by faq_id desc
		
		<if test="listCount > 0">
			limit #{offset}, #{listCount}
		</if>
	</select>
	
	<!-- 데이터 저장을 위한 기능 정의 -->
	<insert id="insertItem"
		parameterType="study.spring.cinephile.model.Faq"
		useGeneratedKeys="true" keyProperty="faq_id">
		insert into faq (faq_title, faq_content, reg_date, edit_date) values (#{faq_title}, #{faq_content}, now(), now());
	</insert>
		
	<!-- 데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteItem"
		parameterType="study.spring.cinephile.model.Faq">
		delete from faq where faq_id=#{faq_id};
	</delete>
		
	<!-- 데이터 수정을 위한 기능 정의 -->
	<update id="updateItem"
		parameterType="study.spring.cinephile.model.Faq">
		update faq set faq_title=#{faq_title}, faq_content=#{faq_content}, edit_date = now()
		where faq_id=#{faq_id};	
	</update>
	
	<!-- 데이터 수 조회하기 -->
	<!-- 
			조건에 맞는 데이터 수를 집계하여 int타입으로 반환
			count, max, min, sum, avg 함수를 사용한 경우 Mapper에서는
			resultMap이 아닌 resultType으로 반환 -->
			
	<select id="selectCountAll"
				parameterType="study.spring.cinephile.model.Faq"
				resultType="int">
		select count(*) from faq
		
		<where>
			<if test ="searchType=='faq_title' and keyword != null and keyword != ''">
				faq_title like concat('%', #{keyword}, '%')
			</if>
			<if test ="searchType=='faq_content' and keyword != null and keyword != ''">
				or faq_content like concat('%', #{keyword}, '%')
			</if>
		</where>
	</select>
</mapper>