<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="MyPageMembersMapper">

	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시 -->
	<resultMap id="myPageMembersMap" type="study.spring.cinephile.model.Members">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결 -->
		<result property="members_id" column="members_id" />
		<result property="user_id" column="user_id" />
		<result property="user_pw" column="user_pw" />
		<result property="user_name" column="user_name" />
		<result property="user_email" column="user_email" />
		<result property="gender" column="gender" />
		<result property="birthdate" column="birthdate" />
		<result property="phone" column="phone" />
		<result property="postcode" column="postcode" />
		<result property="addr" column="addr" />
		<result property="addr_detail" column="addr_detail" />
		<result property="is_out" column="is_out" />
		<result property="out_date" column="out_date" />
		<result property="reg_date" column="reg_date" />
		<result property="edit_date" column="edit_date" />
	</resultMap>
	

		
	<!-- 데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteItem"
		parameterType="study.spring.cinephile.model.Members">
		delete from members
		<where>
		members_id=#{members_id}
		</where>
	</delete>
		
	<!-- 데이터 갱신을 위한 기능 정의 -->
	<update id="updateItem"
		parameterType="study.spring.cinephile.model.Members">
		update members set user_pw=md5(#{user_pw}), user_email=#{user_email}, phone=#{phone}, postcode=#{postcode}, addr=#{addr}, addr_detail=#{addr_detail}, edit_date = now()
		where members_id=#{members_id};	
	</update>
	
	<!-- 이메일 중복검사를 위한 Count -->
	<select id="selectCountAll" parameterType="study.spring.cinephile.model.Members" resultType="int">
	select count(*) from members
	<where>
		members_id!=#{members_id} and user_email=#{user_email}
	</where>
	
	
	</select>
	
	
</mapper>