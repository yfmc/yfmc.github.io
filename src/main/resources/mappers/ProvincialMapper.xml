<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="ProvincialMapper">

	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시 -->
	<resultMap id="provincialMap" type="study.spring.cinephile.model.Provincial">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결 -->
		<result property="prov_no" 		column="prov_no" />
		<result property="prov_name" 	column="prov_name" />
	</resultMap>
	
	<!-- 단일행 조회를 위한 기능 정의 -->
	<select id="selectItem" parameterType="study.spring.cinephile.model.Provincial"
		resultMap="provincialMap">
		select prov_no, prov_name from provincial where prov_no=#{prov_no}
	</select>
	
	<!-- 다중행 조회(datetime)를 위한 기능 정의 -->
	<select id="selectList"
		parameterType="study.spring.cinephile.model.Provincial"
		resultMap="provincialMap">
		select prov_no, prov_name from provincial
	
		<where>
			<if test ="prov_no != null and prov_no != ''">
				prov_no like concat('%', #{prov_no}, '%')
			</if>
			<if test ="prov_name != null and prov_name != ''">
				or prov_name like concat('%', #{prov_name}, '%')
			</if>
		</where>
		
		order by prov_no asc
	</select>
	
	<!-- 데이터 저장을 위한 기능 정의 -->
	<insert id="insertItem"
		parameterType="study.spring.cinephile.model.Provincial"
		useGeneratedKeys="true" keyProperty="prov_no">
		insert into provincial (prov_no, prov_name) values (#{prov_no}, #{prov_name}); 
	</insert>
		
	<!-- 데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteItem"
		parameterType="study.spring.cinephile.model.Provincial">
		delete from provincial where prov_no=#{prov_no};
	</delete>
		
	<!-- 데이터 수정을 위한 기능 정의 -->
	<update id="updateItem"
		parameterType="study.spring.cinephile.model.Provincial">
		update provincial set prov_no=#{prov_no}, prov_name=#{prov_name}
		where prov_no=#{prov_no};	
	</update>
	
	<!-- 데이터 수 조회하기 -->
	<!-- 
			조건에 맞는 데이터 수를 집계하여 int타입으로 반환
			count, max, min, sum, avg 함수를 사용한 경우 Mapper에서는
			resultMap이 아닌 resultType으로 반환 -->
			
	<select id="selectCountAll"
				parameterType="study.spring.cinephile.model.Provincial"
				resultType="int">
		select count(*) from provincial
		
		<where>
			<if test="prov_no != null and prov_no != ''">
				prov_no like concat ('%', #{prov_no}, '%')
			</if>
			<if test="prov_name != null and prov_name !=  ''">
				or prov_name like concat ('%', #{prov_name}, '%')
			</if>
		</where>
	</select>
</mapper>