<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Theater2Mapper">

    <!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
    <resultMap id="theater2Map" type="study.spring.cinephile.model.Theater2">
        <!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
        <result property="theater_id" column="theater_id" />
        <result property="prov_no" column="prov_no" />
        <result property="brand" column="brand" />
        <result property="branch" column="branch" />
        <result property="rooms" column="rooms" />
        <result property="seats" column="seats" />
        <result property="old_addr" column="old_addr" />
        <result property="new_addr" column="new_addr" />
        <result property="lat" column="lat" />
        <result property="lng" column="lng" />
        <result property="full_name" column="full_name"/>
    </resultMap>

    <!-- 단일행 조회를 위한 기능 정의 -->
    <select id="selectItem" parameterType="study.spring.cinephile.model.Theater2"
        resultMap="theater2Map">
        select brand, branch, rooms, seats, old_addr, new_addr, lat, lng from theater where theater_id=#{theater_id};
    </select>
    
    <!-- 다중행 조회를 위한 기능 정의 -->
	<select id="selectList" parameterType="study.spring.cinephile.model.Theater2" resultMap="theater2Map">
		select theater_id, prov_no, brand, branch, new_addr, rooms, seats, full_name
		from (select theater_id,prov_no,brand,branch,new_addr,rooms,seats,concat(brand,' ',branch) as full_name from theater) as full
		<where>
		prov_no=#{prov_no} and brand=#{brand}
			
			<!-- 대소문자 구분없이 검색 가능하게 함 -->
			<if test="branch!=null and branch!=''">
				and (full_name like upper(concat('%',#{branch},'%'))
				or full_name like lower(concat('%',#{branch},'%')))
			</if>
		</where>
		order by theater_id asc
		<if test="listCount>0">
			limit #{offset},#{listCount}
		</if>
	</select>

	<!-- 영화관 검색시 페이지 구현을 위한 전체카운트 -->
	<select id="selectCountAll" parameterType="study.spring.cinephile.model.Theater2" resultType="int">
	select count(*) from (select theater_id,prov_no,brand,concat(brand,' ',branch) as full_name from theater) as full
	<where>
		prov_no=#{prov_no} and brand=#{brand}
		<if test="full_name!=null and full_name!=''">
			and full_name like concat('%',#{name},'%')
		</if>
	</where>
	</select>
</mapper>
